/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppRouteImport } from './routes/_app/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AppIndexImport } from './routes/_app/index'
import { Route as AppSettingsImport } from './routes/_app/settings'
import { Route as AppExploreImport } from './routes/_app/explore'
import { Route as AppCreateStoryImport } from './routes/_app/create-story'
import { Route as authSignupImport } from './routes/(auth)/signup'
import { Route as authSigninImport } from './routes/(auth)/signin'
import { Route as AppUserIndexImport } from './routes/_app/$user.index'
import { Route as AppUserPostSlugImport } from './routes/_app/$user.$postSlug'

// Create/Update Routes

const AppRouteRoute = AppRouteImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AppIndexRoute = AppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppSettingsRoute = AppSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppExploreRoute = AppExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppCreateStoryRoute = AppCreateStoryImport.update({
  id: '/create-story',
  path: '/create-story',
  getParentRoute: () => AppRouteRoute,
} as any)

const authSignupRoute = authSignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => authRouteRoute,
} as any)

const authSigninRoute = authSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => authRouteRoute,
} as any)

const AppUserIndexRoute = AppUserIndexImport.update({
  id: '/$user/',
  path: '/$user/',
  getParentRoute: () => AppRouteRoute,
} as any)

const AppUserPostSlugRoute = AppUserPostSlugImport.update({
  id: '/$user/$postSlug',
  path: '/$user/$postSlug',
  getParentRoute: () => AppRouteRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin': {
      id: '/(auth)/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupImport
      parentRoute: typeof authRouteImport
    }
    '/_app/create-story': {
      id: '/_app/create-story'
      path: '/create-story'
      fullPath: '/create-story'
      preLoaderRoute: typeof AppCreateStoryImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/explore': {
      id: '/_app/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof AppExploreImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/': {
      id: '/_app/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AppIndexImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/$user/$postSlug': {
      id: '/_app/$user/$postSlug'
      path: '/$user/$postSlug'
      fullPath: '/$user/$postSlug'
      preLoaderRoute: typeof AppUserPostSlugImport
      parentRoute: typeof AppRouteImport
    }
    '/_app/$user/': {
      id: '/_app/$user/'
      path: '/$user'
      fullPath: '/$user'
      preLoaderRoute: typeof AppUserIndexImport
      parentRoute: typeof AppRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authSigninRoute: typeof authSigninRoute
  authSignupRoute: typeof authSignupRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authSigninRoute: authSigninRoute,
  authSignupRoute: authSignupRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AppRouteRouteChildren {
  AppCreateStoryRoute: typeof AppCreateStoryRoute
  AppExploreRoute: typeof AppExploreRoute
  AppSettingsRoute: typeof AppSettingsRoute
  AppIndexRoute: typeof AppIndexRoute
  AppUserPostSlugRoute: typeof AppUserPostSlugRoute
  AppUserIndexRoute: typeof AppUserIndexRoute
}

const AppRouteRouteChildren: AppRouteRouteChildren = {
  AppCreateStoryRoute: AppCreateStoryRoute,
  AppExploreRoute: AppExploreRoute,
  AppSettingsRoute: AppSettingsRoute,
  AppIndexRoute: AppIndexRoute,
  AppUserPostSlugRoute: AppUserPostSlugRoute,
  AppUserIndexRoute: AppUserIndexRoute,
}

const AppRouteRouteWithChildren = AppRouteRoute._addFileChildren(
  AppRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof AppIndexRoute
  '': typeof AppRouteRouteWithChildren
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/create-story': typeof AppCreateStoryRoute
  '/explore': typeof AppExploreRoute
  '/settings': typeof AppSettingsRoute
  '/$user/$postSlug': typeof AppUserPostSlugRoute
  '/$user': typeof AppUserIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AppIndexRoute
  '/signin': typeof authSigninRoute
  '/signup': typeof authSignupRoute
  '/create-story': typeof AppCreateStoryRoute
  '/explore': typeof AppExploreRoute
  '/settings': typeof AppSettingsRoute
  '/$user/$postSlug': typeof AppUserPostSlugRoute
  '/$user': typeof AppUserIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_app': typeof AppRouteRouteWithChildren
  '/(auth)/signin': typeof authSigninRoute
  '/(auth)/signup': typeof authSignupRoute
  '/_app/create-story': typeof AppCreateStoryRoute
  '/_app/explore': typeof AppExploreRoute
  '/_app/settings': typeof AppSettingsRoute
  '/_app/': typeof AppIndexRoute
  '/_app/$user/$postSlug': typeof AppUserPostSlugRoute
  '/_app/$user/': typeof AppUserIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/signin'
    | '/signup'
    | '/create-story'
    | '/explore'
    | '/settings'
    | '/$user/$postSlug'
    | '/$user'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/signup'
    | '/create-story'
    | '/explore'
    | '/settings'
    | '/$user/$postSlug'
    | '/$user'
  id:
    | '__root__'
    | '/(auth)'
    | '/_app'
    | '/(auth)/signin'
    | '/(auth)/signup'
    | '/_app/create-story'
    | '/_app/explore'
    | '/_app/settings'
    | '/_app/'
    | '/_app/$user/$postSlug'
    | '/_app/$user/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AppRouteRoute: typeof AppRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AppRouteRoute: AppRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_app"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/signin",
        "/(auth)/signup"
      ]
    },
    "/_app": {
      "filePath": "_app/route.tsx",
      "children": [
        "/_app/create-story",
        "/_app/explore",
        "/_app/settings",
        "/_app/",
        "/_app/$user/$postSlug",
        "/_app/$user/"
      ]
    },
    "/(auth)/signin": {
      "filePath": "(auth)/signin.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/signup": {
      "filePath": "(auth)/signup.tsx",
      "parent": "/(auth)"
    },
    "/_app/create-story": {
      "filePath": "_app/create-story.tsx",
      "parent": "/_app"
    },
    "/_app/explore": {
      "filePath": "_app/explore.tsx",
      "parent": "/_app"
    },
    "/_app/settings": {
      "filePath": "_app/settings.tsx",
      "parent": "/_app"
    },
    "/_app/": {
      "filePath": "_app/index.tsx",
      "parent": "/_app"
    },
    "/_app/$user/$postSlug": {
      "filePath": "_app/$user.$postSlug.tsx",
      "parent": "/_app"
    },
    "/_app/$user/": {
      "filePath": "_app/$user.index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
